*vim-zettel.txt*    A Zettelkasten VimWiki Addon Last change: 2020 Jul 21

             _____    _   _       _ _             _                          ~
            |__  /___| |_| |_ ___| | | _____  ___| |_ ___ _ __               ~
              / // _ \ __| __/ _ \ | |/ / _ \/ __| __/ _ \ '_ \              ~
             / /|  __/ |_| ||  __/ |   < (_| \__ \ ||  __/ | | |             ~
            /____\___|\__|\__\___|_|_|\_\__,_|___/\__\___|_| |_|             ~


==============================================================================
CONTENTS                                                           *vim-zettel*

0. Intro                                     |Vim-Zettel-Intro|
1. Installation                              |Vim-Zettel-Install|
2. Configuration                             |Vim-Zettel-Configure|
3. Commands                                  |Vim-Zettel-Commands|
   `ZettelNew`                                |Vim-Zettel_ZettelNew|
   `ZettelOpen`                               |Vim-Zettel_ZettelOpen|
   `ZettelInsertNote`                         |Vim-Zettel_ZettelInsertNote|
   `ZettelCapture`                            |Vim-Zettel_ZettelCapture|
   `ZettelNewSelectedMap`                     |Vim-Zettel_ZettelNewSelectedMap|
   `ZettelSetActiveWiki`                      |Vim-Zettel_ZettelSetActiveWiki|
   `ZettelBackLinks`                          |Vim-Zettel_ZettelBackLinks|
   `ZettelInbox`                              |Vim-Zettel_ZettelInbox|
   `ZettelGenerateLinks`                      |Vim-Zettel_ZettelGenerateLinks|
   `ZettelGenerateTags`                       |Vim-Zettel_ZettelGenerateTags|
   `ZettelSearch`                             |Vim-Zettel_ZettelSearch|
   `ZettelYankName`                           |Vim-Zettel_ZettelYankName|
4. Mappings                                  |Vim-Zettel-Mappings|
   `z`                                        |Vim-Zettel_z|
   `[[`                                       |Vim-Zettel_[[|
   `T`                                        |Vim-Zettel_T|
   `gZ`                                       |Vim-Zettel_gZ|
5. Variables                                 |Vim-Zettel-Variables|
6. Templates                                 |Vim-Zettel-Templates|
7. Related Packages                          |Vim-Zettel-Related|
8. ChangeLog                                 |Vim-Zettel-ChangeLog|

==============================================================================
0. Intro                                                     *Vim-Zettel-Intro*

This is a Vim plugin that implements ideas of the zettelkasten method of
note taking as described at https://zettelkasten.de/.  It is an add-on to
the Vimwiki extension for Vim and supports both Vimwiki and Markdown syntaxes.

Main features:

- customizable filenames (date and time, title, consecutive numbering, random
  characters)
- links always show titles, regardless of the actual filename
- fulltext support using FZF for searching and hyperlinking
- search your Zettelkasten from LaTeX or Markdown documents and insert
  selected notes to the document
- template support
- automatically updated tag index
- backlinks

==============================================================================
1. Installation                                           *Vim-Zettel-Install*

This extension requires an external search utility.  It uses The Silver
Searcher by default.
(Available at https://github.com/ggreer/the_silver_searcher/ or in your OS
repositories).

Using Vundle: >

   Plugin 'vimwiki/vimwiki'
   Plugin 'junegunn/fzf'
   Plugin 'junegunn/fzf.vim'
   Plugin 'michal-h21/vim-zettel'
<
==============================================================================
2. Configuration                                        *Vim-Zettel-Configure*

First of all, it is necessary to configure Vimwiki, as Vim-Zettel builds
on top of it.  Vim-Zettel can be used out of the box without further
configuration if you have only one wiki.  However, you will probably want to
customize your Vim-Zettel configuration and will have to if you have more than
one wiki.
>
   " Settings for Vimwiki
   let g:vimwiki_list = \
     [{'path':'~/scratchbox/vimwiki/markdown/','ext':'.md',\
     'syntax':'markdown'}, {"path":"~/scratchbox/vimwiki/wiki/"}]
<
You may want to set some of the following options in your .vimrc file to make
Vim-Zettel work to your liking:

- |g:zettel_options|
- |g:zettel_format|
- |g:zettel_default_mappings|
- |g:zettel_fzf_command|
- |g:zettel_fzf_options|
- |g:zettel_backlinks_title|
- |g:zettel_backlinks_title_level|
- |g:zettel_unlinked_notes_title|
- |g:zettel_unlinked_notes_title_level|
- |g:zettel_generated_tags_title|
- |g:zettel_generated_tags_title_level|

You can also supply a custom template for creating new zettels. See
|Vim-Zettel-Templates|.

==============================================================================
3. Commands                                              *Vim-Zettel-Commands*

Once you have Vim-Zettel installed, use the `:VimwikiIndex` command to open
the main file of your wiki. You can link to your notes from this page.

Vim-Zettel implements the following commands on top of Vimwiki.

                                                       *Vim-Zettel_ZettelNew*
                                                                  *ZettelNew*
- `:ZettelNew` command – it will create a new wiki file named as
 %y%m%d-%H%M.wiki (it is possible to change the file name format using
 |g:zettel_format| variable). The file uses basic template in the form

>
   %title Note title
   %date current date
<
where title is the first parameter to `:ZettelNew`.

If you use the default mappings provided by `Vim-Zettel`, it is possible to
call this command by pressing the `z` character in visual mode. The selected
text will be used as title of the new note.

The newly created wiki-file will be saved in:

  (1) the current directory if it is in the `g:vimwiki_list` paths
  (2) the directory-path of the first `g:vimwiki_list` with non-empty `g:zettel_options`
  (3) the directory-path given by the first `g:vimwiki_list` entry
  (4) vimwiki's default directory

with the given order.

                                                       *Vim-Zettel_ZettelOpen*
                                                                  *ZettelOpen*
- `:ZettelOpen` command - perform fulltext search using FZF. It keeps the
  history of opened pages.

                                                 *Vim-Zettel_ZettelInsertNote*
                                                            *ZettelInsertNote*
- `:ZettelInsertNote` - select notes using FZF and insert them in the current
  document.  Multiple notes can be selected using the `<TAB>` key.  They are
  automatically converted to the document syntax format using Pandoc.

                                                   *Vim-Zettel_ZettelCapture*
                                                              *ZettelCapture*
- `:ZettelCapture` command – turn the content of the current file into a
   zettel.  This is a global command available throughout Vim. WARNING:
   this command is destructive. Use only on temporary files.  You can run
   this from within vim while viewing a file you want to turn into a zettel
   or from the command line: >

       vim -c ZettelCapture filename
<
    you can specify wiki number (starting from 0) if you have multiple
    wikis. It opens first declared wiki by default:

>
      vim -c "ZettelCapture 1" filename
<


                                            *Vim-Zettel_ZettelNewSelectedMap*
                                                       *ZettelNewSelectedMap*
- `:ZettelNewSelectedMap` creates a new note with the selected title while
  converting the selection as a link to the newly created zettel. If you want
  to replace the selected text about foo with a new zettel containing the
  selection, you can do 

    1. select lines about foo
    2. delete
    3. write a title for the new note
    4. select the title
    5. press z, which calls `ZettelNewSelectedMap` and creates a new note
       with the selected title
    6. paste the deleted content

                                             *Vim-Zettel_ZettelSetActiveWiki*
                                                        *ZettelSetActiveWiki*

- `:ZettelSetActiveWiki` command - select default wiki for commands that can
  operate when Vimwiki is not active, like `:ZettelOpen` or
  `:ZettelInsertNote`.

                                                 *Vim-Zettel_ZettelBackLinks*
                                                            *ZettelBackLinks*
- `:ZettelBackLinks` command – insert list of notes that link to the current
   note.

                                                     *Vim-Zettel_ZettelInbox*
                                                                *ZettelInbox*
- `:ZettelInbox` command – insert list of notes that are not reachable from
  the index file (you can open the index file using the `:VimwikiIndex`
  command).

                                             *Vim-Zettel_ZettelGenerateLinks*
                                                        *ZettelGenerateLinks*
- `:ZettelGenerateLinks` command – insert list of all wiki pages in the
   current page. It needs updated tags database. The tags database can be
   updated  using the `:VimwikiRebuildTags!` command.

                                              *Vim-Zettel_ZettelGenerateTags*
                                                         *ZettelGenerateTags*
- `:ZettelGenerateTags` command – insert list of tags and pages that used
   these tags in the current page. It needs updated tags database. The tags
   database can be updated  using the `:VimwikiRebuildTags!` command. It only
   supports the Vimwiki style tags in the form :tag1:tag2. These work
   even in the Markdown mode.

                                                   *Vim-Zettel_ZettelSearch*
                                                              *ZettelSearch*
- `:ZettelSearch` command – search the content of your zettelkasten and
   insert links to the selected zettels in your current note. Use
   <shift><tab> to select multiple notes. Mapped to `[[` in insert mode.

                                             *Vim-Zettel_ZettelSelectBuffer*
                                                        *ZettelSelectBuffer*
- `:ZettelSelectBuffer` - select from a list of recently opened notes.

                                             *Vim-Zettel_ZettelTitleSelected*
                                                        *ZettelTitleSelected*
- `:ZettelTitleSelected` - select note using FZF and use actually selected
  text as a title.

                                                 *Vim-Zettel_ZettelYankName*
                                                            *ZettelYankName*
- `:ZettelYankName` – copy formatted link to the current zettel to a register.
  Mapped to `T` in normal mode.

Useful Vimwiki commands ~

- |:VimwikiBacklinks| - display files that link to the current page
- |:VimwikiCheckLinks|- display files that no other file links to

==============================================================================
4. Mappings                                              *Vim-Zettel-Mappings*

`Vim-zettel` sets some mappings by default. You can disable the default
mappings and define your own. See |g:zettel_default_mappings| for more
details.

                                                               *Vim-Zettel_z*
- `z` command in visual mode – create a new wiki file using selected text for
   the note title

                                                              *Vim-Zettel_[[*
- [[ command in insert mode – create a link to a note. It uses FZF for the
   note searching.

- g[ command for visual selection - create a link to a note, with the selected
  text as a title.

                                                               *Vim-Zettel_T*
- T command in normal mode – yank the current note filename and title as a
   Vimwiki link

                                                              *Vim-Zettel_gZ*
- gZ command in normal mode – replace file path under cursor with Wiki link

It may be convenient to map `ZettelNew` to prompt for a note title also:
>
   nnoremap <leader>zn :ZettelNew<space>
<
==============================================================================
5. Variables                                             *Vim-Zettel-Variables*

                                                           *g:zettel_options*
The g:zettel_options variable corresponds to the g:vimwiki_list variable.  If
you have more than one vimwiki and the second wiki listed in your
g:vimwiki_list variable is your zettelkasten, then you must represent the
first wiki in your g:zettel_options list as a set of empty braces:
>
                   first wiki     zettelkasten wiki
                            ↓     ↓
   let g:zettel_options = [{}, {"front_matter" : [["tags", ""], ["type","note"]],
   \ "template" : "~/mytemplate.tpl",
   \ "rel_path" : "zettel/"}]
<
`front_matter` contains additional fields to be inserted in the header of a
new note. It should be list of lists, where the first item contains key and
the second contains value.

The second item can contain funcref. The function will be executed each time
when this `front_matter` option is used. This can be used to insert the
current Zettel ID, for example: >
  function! s:insert_id()
    if exists("g:zettel_current_id")
      return g:zettel_current_id
    else
      return "unnamed"
    endif
  endfunction

  let g:zettel_options = [{"front_matter" :
    [["tags" , ":hello:"],
    [ "id" , function("s:insert_id")]]
  }]
<

You can disable front matter completely by setting `disable_front_matter`
option to other value than 0.

The `template` field is discussed in |Vim-Zettel-Templates|.

The `rel_path` field determines where new notes will be created, relative to
the current vimwiki path. The trailing slash is required, e.g. if your vimwiki
path is `~/vimwiki`, then `"rel_path": "zettel/"` will place zettels in
`~/vimwiki/zettel/`.

                                                            *g:zettel_format*
By default, Vim-Zettel creates filenames in the form YYMMDD-HHMM. This
format can be changed using the g:zettel_format variable. Any date and time
formats supported by the `strftime()` function.

It is also possible to use other formatting strings:

- %title -- insert sanitized title
- %raw_title -- insert raw title
- %file_no -- sequentially number files in wiki
- %file_alpha -- sequentially number files in wiki, but use characters
   instead of numbers
- %random -- use random characters. Their number can be configured using
  `g:zettel_random_chars` option, eight is used by default.

To use filename based on current time and note title, you can use the
following format:
>
   let g:zettel_format = "%y%m%d-%H%M-%title"
<
For sequentialy named files use:
>
   let g:zettel_format = "%file_no"
<
If the generated file name exists (this may happen when you use the default
format - `%y%m%d-%H-M`, letter suffix is added to the filename. You will then
get `200622-1114` and `200622-1114a` when you create two notes in one minute.

Vim-Zettel respects the `link_space_char` setting defined by vimwiki
(see `:h links_space_char`), which lets you specify the separates used in place
of spaces for filenames.

You can use Vimwiki variable `g:vimwiki_markdown_link_ext` to require
inclusion of the `.md` extension in links created by Vim-zettel (eq. using `z`
or `T` keys).
>
   let g:vimwiki_markdown_link_ext = 1
<
                                                     *g:zettel_default_title*
Text used for `%title` formatting string in new Zettel filename if title was
not provided.

                                                     *g:zettel_date_format*
Date format used for date metadata in front matter for a new zettel. It will
need to be supported by the `strftime()` function.

For example:
>
    let g:zettel_date_format = "%y/%m/%d"
<
                                                  *g:zettel_default_mappings*
The default mappings used by Vim-Zettel can be changed by setting the
g:zettel_default_mappings variable to 0 and then prividing your own keymaps.
The code below can serve as a template to start from.
 >
   let g:zettel_default_mappings = 0
   " This is basically the same as the default configuration
   augroup filetype_vimwiki
     autocmd!
     autocmd FileType vimwiki imap <silent> [[ [[<esc><Plug>ZettelSearchMap
     autocmd FileType vimwiki nmap T <Plug>ZettelYankNameMap
     autocmd FileType vimwiki xmap z <Plug>ZettelNewSelectedMap
     autocmd FileType vimwiki nmap gZ <Plug>ZettelReplaceFileWithLink
   augroup END
<
                                                       *g:zettel_fzf_command*
Vim-Zettel uses The Silver Searcher (ag) by default when searching through
your files.  The g:zettel_fzf_command can be used to override the default
setting. >

   " command used for VimwikiSearch
   " default value is "ag". To use other command, like ripgrep, pass the
   " command line and options:
   let g:zettel_fzf_command = "rg --column --line-number --ignore-case \
     --no-heading --color=always "

<
Note that if you want to use Ripgrep, you need to pass at least the `--column`
option for the correct handling.

                                                       *g:zettel_fzf_options*
Options used for the `fzf` command.

>
   let g:zettel_fzf_options = ['--exact', '--tiebreak=end']

<
                                              *g:zettel_generated_index_title*
Text used as generated index section.

>
   let g:zettel_generated_index_title = "Generated Index"
<

                                        *g:zettel_generated_index_title_level*
Header level to be used when generating the generated index section.

>
   let g:zettel_generated_index_title_level = 1
<

                                                    *g:zettel_backlinks_title*
Text used as back links section.

>
   let g:zettel_backlinks_title = "Backlinks"
<

                                              *g:zettel_backlinks_title_level*
Header level to be used when generating the back links section.

>
   let g:zettel_backlinks_title_level = 1
<

                                               *g:zettel_unlinked_notes_title*
Text used as unlinked notes section.

>
   let g:zettel_unlinked_notes_title = "Unlinked Notes"
<

                                         *g:zettel_unlinked_notes_title_level*
Header level to be used when generating the unlinked notes section.

>
   let g:zettel_unlinked_notes_title_level = 1
<

                                               *g:zettel_generated_tags_title*
Text used as generated tags section.

>
   let g:zettel_generated_tags_title = "Generated Tags"
<

                                         *g:zettel_generated_tags_title_level*
Header level to be used when generating the generated tags section.

>
   let g:zettel_generated_tags_title_level = 1
<

                                                       *g:zettel_link_format*
Format used for generated links. You can change this variable if you are not
satisfied with the default format.
>
   let g:zettel_link_format="[%title](%link)"
<

                                                      *g:zettel_random_chars*

Number of characters used in `%random` zettel name format.


                                                   *g:zettel_bufflist_format*

Format used in `ZettelSelectBuffer`. Available variables are `%filename` and
`%title`. Note that for notes where title cannot be found, filename is used
as title and filename is empty.
>
   let g:zettel_bufflist_format = "%filename - %title
<


==============================================================================
6. Templates                                             *Vim-Zettel-Templates*

It is possible to populate new notes with basic structure using templates.
Template can be declared using the g:zettel_options variable: >

   let g:zettel_options = [{"template" :  "~/path/to/mytemplate.tpl"}]
<
Sample template: >

   = %title =

   Backlink: %backlink
   ----
   %footer
<
Variables that start with the % will be expanded. Supported variables:

- %title - title of the new note
- %id - filename of the new note
- %backlink - back link to the parent note
- %date - date and time of the new note. Format is based on
  `g:zettel_date_format` variable.
- %footer - text from the parent note footer. Footer is separated from  the
 main text by horizontal rule  (----). It can contain some information
 shared by notes. For example notes about publication can share citation of
 that publication.

All variables set in the `front_matter` option are available as well.

==============================================================================
7. Related packages                                        *Vim-Zettel-Related*

The following packages may be useful in conjunction with Vimwiki and
Vim-Zettel:

- [Notational FZF](https://github.com/alok/notational-fzf-vim) - fast
   searching notes with preview window.

   To search in the Zettelkasten, set the following variable with path to the
   Zettelkasten direcory in .vimrc: >

       let g:nv_search_paths = ['/path/to/zettelkasten/dir']
<
- [Vimwiki-sync](https://github.com/michal-h21/vimwiki-sync) - automatically
commit changes in wiki and synchronize them with external Git repository.


==============================================================================
8.  Changelog                                            *Vim-Zettel-ChangeLog*

2024/11/28  Michal Hoftich <michal.h21@gmail.com>

* autoload/zettel/vimwiki.vim: use relative paths in links inserted by
  `zettel_new_selected()`.
  https://github.com/michal-h21/vim-zettel/issues/155

* autoload/zettel/vimwiki.vim: fixed issues with backlinks to and from
  subdirectories.

2024-10-29  Matthieu Talbot

* autoload/zettel/vimwiki.vim: fixed support for backlinks in subfolders.
  https://github.com/michal-h21/vim-zettel/pull/153

2024-07-30  Michal Hoftich <michal.h21@gmail.com>

* autoload/zettel/fzf.vim, 
* ftplugin/vimwiki/zettel.vim: enable selection of multiple selected notes
  https://github.com/michal-h21/vim-zettel/issues/151

2024-04-29  Matthieu Talbot

* autoload/zettel/fzf.vim: Directly use the wiki extension setting instead of removing last dot.
  https://github.com/michal-h21/vim-zettel/pull/150

2024-04-25  Matthieu Talbot

* autoload/zettel/vimwiki.vim: Fix link generation when wiki extension has multiple dots
  https://github.com/michal-h21/vim-zettel/pull/149

2024-01-31  l1laxS

* tests/*: added testing infrastructure.
  https://github.com/michal-h21/vim-zettel/pull/146


2024-01-11  rfhlmn

* autoload/zettel/vimwiki.vim: make link paths relative to current file.
  https://github.com/michal-h21/vim-zettel/pull/142


2024-01-09  Michal Hoftich <michal.h21@gmail.com>

* autoload/zettel/vimwiki.vim: fixed loading of Vimwiki's tags file.
  https://github.com/michal-h21/vim-zettel/issues/144

2023-12-17  Ulrich Wolf

* autoload/zettel/vimwiki.vim: add extension to new notes created using
  `:ZettelNew` outside of the Zettel dir.

2023-10-31  Bence Ferdinandy <bence@ferdinandy.com>

* autoload/zettel/vimwiki.vim: added basic support for notes in subdirectories
  of the main wiki

2022-12-22  Michal Hoftich <michal.h21@gmail.com>

* autoload/zettel/vimwiki.vim: pass full path when creating new zettel, it is
  necessary for the correct capture.
  https://github.com/michal-h21/vim-zettel/issues/132
* autoload/zettel/vimwiki.vim: fixed wiki `idx` retrieval when `:ZettelNew` is
  used outside of wiki.
* autoload/zettel/vimwiki.vim,
* ftplugin/vimwiki/zettel.vim: moved `g:zettel_format` declaration, to prevent
  errors in `zettel_new` executed outside of wiki.

2022-12-21  Michal Hoftich <michal.h21@gmail.com>

* autoload/zettel/fzf.vim: don't limit `execute_fzf` function to the wiki file
  extension. It caused search error on Windows.
  https://github.com/michal-h21/vim-zettel/issues/133

2022-07-19  Michal Hoftich <michal.h21@gmail.com>

* autoload/zettel/vimwiki.vim: fixed passed parameters for
  `vimwiki#base#check_links` in Vimwiki development mode, to prevent runtime
  errors in `:ZettelInbox`.
  https://github.com/michal-h21/vim-zettel/issues/127

2022-06-27  Michal Hoftich <michal.h21@gmail.com>

* ftplugin/vimwiki/zettel.vim: use `g[` mapping instead of `[[` in the visual
  mode for execution of the `:ZettelTitleSelected`. The former mapping didn't
  work for some users.

2022-06-22  Michal Hoftich <michal.h21@gmail.com>

* ftplugin/vimwiki/zettel.vim: added a new command, `:ZettelTitleSelected`. It
  uses visually selected text as a title for a link to a selected note.

2022-06-20  Leandro

* ftplugin/vimwiki/zettel.vim: use noremap for mapings.

2022-06-13  Michal Hoftich <michal.h21@gmail.com>

* autoload/zettel/vimwiki.vim: added `s:is_wiki_devel` function for detection
  of the development version of Vimwiki.

* autoload/zettel/vimwiki.vim: use the new parameter for `:ZettelInbox` only
  with development version of Vimwiki.

2022-06-13  Edward Joshua Evans

* autoload/zettel/vimwiki.vim: select current Wiki for the `:ZettelInbox`.

2022-06-07  Michal Hoftich <michal.h21@gmail.com>

* autoload/zettel/fzf.vim: removed debugging messages.
  https://github.com/michal-h21/vim-zettel/issues/101
* doc/zettel.txt: info about necessary command line options for Ripgrep
  https://github.com/michal-h21/vim-zettel/issues/71

2022-05-31  Michal Hoftich <michal.h21@gmail.com>

* autoload/zettel/vimwiki.vim: added %id variable to the new zettel templates.

2022-05-30  Michal Hoftich <michal.h21@gmail.com>

* autoload/zettel/fzf.vim: added `g:zettel_bufflist_format` template for
  formatting of the bufferlist listing.

2022-05-27  Michal Hoftich <michal.h21@gmail.com>

* autoload/zettel/fzf.vim: scroll to the line selected in :ZettelOpen.
  https://github.com/michal-h21/vim-zettel/issues/120
* ftplugin/vimwiki/zettel.vim: added `:ZettelSelectBuffer` command.
  https://github.com/michal-h21/vim-zettel/issues/119

2022-05-26  Michal Hoftich <michal.h21@gmail.com>

* plugin/zettel.vim: don't initialize zettelkasten directory in
  ZettelInsertNote.
* autoload/zettel/fzf.vim: initialize default wiki for FZF search.
* autoload/zettel/fzf.vim: fixed ag search.

2021-12-08  Marc Mezzarobba

* ftplugin/vimwiki/zettel.vim: support arbitrary registers in wiki_yank_name()
  https://github.com/michal-h21/vim-zettel/pull/116

2021-10-11  Phorv

* autoload/zettel/fzf.vim: Use current wiki for ZettelInsertNote.
  https://github.com/michal-h21/vim-zettel/pull/114

2021-07-26  Sebastián Zaffarano <sebas@zaffarano.com.ar>

* autoload/zettel/vimwiki.vim: make index, backlinks and unlinked section
  titles configurable.
  https://github.com/michal-h21/vim-zettel/pull/110

2021-02-20  Dennis Jung

* autoload/zettel/vimwiki.vim: extract note title from first heading when
  title header is missing.
  https://github.com/michal-h21/vim-zettel/pull/105

2021-02-18  Guillermo Blanco

* autoload/zettel/vimwiki.vim: correctly set the default wiki upon startup.
  https://github.com/michal-h21/vim-zettel/pull/104

2021-02-11  Ricky Anderson

* ftplugin/vimwiki/zettel.vim: change default mappings to buffer local mappings.
  https://github.com/michal-h21/vim-zettel/pull/100

2021-01-20  Kraxli

* autoload/zettel/fzf.vim: using fzf#vim#grep for ag in
  zettel#fzf#execute_fzf.
  https://github.com/michal-h21/vim-zettel/pull/97

2021-01-17  Kraxli

* autoload/zettel/vimwiki.vim: run on non-vimwiki-buffer and directory to save
  new Zettel to.
  https://github.com/michal-h21/vim-zettel/pull/96

2021-01-13  Roman Garanin

* doc/zettel.txt: fixed typo.
  https://github.com/michal-h21/vim-zettel/pull/92

2020-11-15  Benedikt Wildenhain <benedikt.wildenhain@hs-bochum.de>

* autoload/zettel/vimwiki.vim: make #vimwiki#make_random_chars compatible to
  Vim 8.1
  https://github.com/michal-h21/vim-zettel/pull/84

2020-11-02  Shaine Hatch <shaine@squidtree.com>

  * autoload/zettel/vimwiki.vim: Prevent duplicate file creation.
  https://github.com/michal-h21/vim-zettel/pull/78

2020-10-22  Doug Ghormley

* autoload/zettel/vimwiki.vim: detect backlinks without titles in links.

2020-10-11  LeducH

* README.md: `vim-plug` install details.

2020-09-24  Michal Hoftich <michal.h21@gmail.com>

* autoload/zettel/fzf.vim: use `'down': '~40%'` option for FZF.

2020-09-23  Michal Hoftich <michal.h21@gmail.com>

* autoload/zettel/vimwiki.vim: two new functions,
  `zettel#vimwiki#set_active_wiki` and
  `zettel#vimwiki#initialize_wiki_number`. Set active wiki number to 0 by
  default.
* autoload/zettel/fzf.vim: initialize default wiki number to 0.
* plugin/zettel.vim: added `:ZettelSetActiveWiki` command.
* ftplugin/vimwiki/zettel.vim: moved `:ZettelOpen` command
  to `plugin/zettel.vim`, in order to be available outside Vimwiki
  https://github.com/michal-h21/vim-zettel/issues/69

2020-09-18  Michal Hoftich <michal.h21@gmail.com>

* autoload/zettel/vimwiki.vim: enable `%date` variable in templates.
  https://github.com/michal-h21/vim-zettel/issues/68

* autoload/zettel/vimwiki.vim: added `disable_front_matter` option. It
  disables front matter in new zettels.
  https://github.com/michal-h21/vim-zettel/issues/67

2020-09-08  Michal Hoftich <michal.h21@gmail.com>

* autoload/zettel/fzf.vim: search only in files with the current wiki syntax.
  https://github.com/michal-h21/vim-zettel/issues/65

2020-09-07  Michal Hoftich <michal.h21@gmail.com>

* autoload/zettel/vimwiki.vim: enable functions to be passed as front matter
  values
* autoload/zettel/vimwiki.vim: save the current zettel ID as a global variable
  https://github.com/michal-h21/vim-zettel/issues/66

2020-09-04  Michal Hoftich <michal.h21@gmail.com>

* autoload/zettel/vimwiki.vim: use `front_matter` variables in template
  expansion.

2020-09-03  Michal Hoftich <michal.h21@gmail.com>

* ftplugin/vimwiki.vim: renamed this file as `ftplugin/vimwiki/zettel.vim`, in
  order to prevent filename conflicts in some pluging managers.
  https://github.com/michal-h21/vim-zettel/issues/61

2020-09-02  Michal Hoftich <michal.h21@gmail.com>

* autoload/zettel/vimwiki.vim: added support for `%random` zettel name format.
  https://github.com/michal-h21/vim-zettel/issues/63
* autoload/zettel/vimwiki.vim: `front_matter` variable should be list now,
  because it needs to keep a correct order.
  https://github.com/michal-h21/vim-zettel/issues/62

2020-08-28  Michal Hoftich <michal.h21@gmail.com>

* autoload/zettel/vimwiki.vim: fixed template application when new zettel
  filename starts with letter.
  https://github.com/michal-h21/vim-zettel/issues/59

2020-08-19  Michal Hoftich <michal.h21@gmail.com>

* autoload/zettel/vimwiki.vim: removed the older version of `update_listing`
  function, the code it depended on Vimwiki was removed.

2020-08-17  Michal Hoftich <michal.h21@gmail.com>

* doc/zettel.txt: don't create tags for `g:vimwiki_markdown_link_ext`
  variable, it can cause clashes with Vimwiki.
  https://github.com/michal-h21/vim-zettel/issues/57

* doc/zettel.txt: link to mapping configuration from the mapping section.

* doc/zettel.txt,
* README.md: added main features of `vim-zettel`.

2020-08-13  Michal Hoftich <michal.h21@gmail.com>

* autoload/zettel/vimwiki.vim: support for anchored links in `:ZettelBackLinks`
  https://github.com/michal-h21/vim-zettel/issues/54

* autoload/zettel/vimwiki.vim: fixed FZF support for notes with colons in
  filenames.
  https://github.com/michal-h21/vim-zettel/issues/55

2020-07-26  Michal Hoftich <michal.h21@gmail.com>

* autoload/zettel/vimwiki.vim: removed `:` character from all `execute`
  commands.

2020-07-21  Michal Hoftich <michal.h21@gmail.com>

* autoload/zettel/vimwiki.vim: added `g:zettel_link_format` variable.

2020-07-17  Michal Hoftich <michal.h21@gmail.com>

* autoload/zettel/vimwiki.vim: added support for `g:vimwiki_markdown_link_ext`
  setting.

2020-07-15  Dan Pilone

* autoload/zettel/vimwiki.vim: don't add self-link when building backlinks.

2020-07-15  Dan Pilone

* autoload/zettel/vimwiki.vim: don't add self-link when building backlinks.

2020-07-06  Irfan Sharif

* autoload/zettel/vimwiki.vim: respect `links_space_char` setting from
  Vimwiki.

2020-07-04  Irfan Sharif

* autoload/zettel/vimwiki.vim: listify results of :ZettelInbox.

2020-06-29  Michal Hoftich <michal.h21@gmail.com>

* autoload/zettel/vimwiki.vim: remove some punctuation from filenames in
  `zettel#vimwiki#escape_filename`.
* autoload/zettel/vimwiki.vim: save file before it is read by
  `prepare_template_variables`
  https://github.com/michal-h21/vim-zettel/issues/43

2020-06-27  Irfan Sharif

* autoload/zettel/vimwiki.vim: added `g:zettel_date_format` variable.

2020-06-26  Michal Hoftich <michal.h21@gmail.com>

* ftplugin/vimwiki.vim: detect correct register for `:ZettelYankName`.
* autoload/zettel/vimwiki.vim: detect imported file title in
  `capture()`.
* autoload/zettel/vimwiki.vim: use default title in `new_zettel_name()`

2020-06-25  Michal Hoftich <michal.h21@gmail.com>

* autoload/zettel/vimwiki.vim: add letter to filename if `:ZettelNew` is used
  multiple times in one minute.

2020-06-24  Michal Hoftich <michal.h21@gmail.com>

* autoload/zettel/vimwiki.vim: the back links title is configurable
* autoload/zettel/vimwiki.vim: template is now available also in the
  `:ZettelNew` command.
* ftplugin/vimwiki.vim: removed unused variable `g:zettel_filename_title`.
* doc/zettel.txt: added ChangeLog and documented few variables.


vim:tw=78:ts=8:ft=help
